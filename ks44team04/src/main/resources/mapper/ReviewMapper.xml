<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks44team04.mapper.ReviewMapper">

	<resultMap type="ReviewLike" id="reviewLikeSersultMap">
		<id     column="review_like"	property="reviewLike"/>
		<result column="review_list" 	property="reviewList"/>
		<result column="user_id" 		property="userId"/>
		<result column="like_reg_date" 	property="likeRegDate"/>
	</resultMap>

	<resultMap type="ReviewComment" id="reviewCommentSersultMap">
		<id     column="review_comment_list"  		property="reviewCommentList"/>
		<result column="review_list" 				property="reviewList"/>
		<result column="user_id" 					property="userId"/>
		<result column="review_comment_content" 	property="reviewCommentContent"/>
		<result column="reg_date"  					property="regDate"/>
		<result column="modify_date" 				property="modifyDate"/>
	</resultMap>
	
	<resultMap type="Review" id="reviewListResultMap">
		<id     column="review_list"  			property="reviewList"/>
		<result column="goods_list" 			property="goodsList"/>
		<result column="buyer_id" 				property="buyerId"/>
		<result column="order_detail_code" 		property="orderDetailCode"/>
		<result column="review_content"  		property="reviewContent"/>
		<result column="review_img" 			property="reviewImg"/>
		<result column="review_reg_date" 		property="reviewRegDate"/>
		<result column="review_update_date" 	property="reviewUpdateDate"/>
		<result column="save_point" 			property="savePoint"/>
		<result column="like_amount" 			property="likeAmount"/>
		<result column="grade" 					property="grade"/>
	</resultMap>
	
<!-- 후기 목록  -->
<select id="reviewList" resultMap="reviewListResultMap">
/* 후기 목록 */
	SELECT 
		r.review_list
		,r.goods_list
		,r.buyer_id
		,r.order_detail_code
		,r.review_content
		,r.review_img
		,r.review_reg_date
		,r.review_update_date
		,r.save_point
		,r.like_amount
		,r.grade
	FROM 
		tb_review AS r 
	
</select>

<!-- 후기 등록  -->
<insert id="reviewAdd"  parameterType="Review">
INSERT INTO tb_review
	(review_list
	,goods_list
	,buyer_id
	,order_detail_code
	,review_content
	,review_img
	,review_reg_date
	,review_update_date
	,save_point
	,like_amount
	,grade)
	VALUES 
		(#{reviewList}
		,#{goodsList}
		,#{buyerId}
		,#{orderDetailCode}
		,#{reviewContent}
		,#{reviewImg}
		,NOW()
		,NOW()
		,0
		,0
		,0)
</insert>

<!-- 후기 등록시 코드 증가  -->
    <select id="getReviewList" resultType="String">
    /* 신고등록시 코드 증가*/
	SELECT 
		review_list
	FROM 
		tb_review
	ORDER BY review_list DESC LIMIT 1
    </select>

<!-- 후기목록  검색 -->
<select id="reviewSerchList" resultMap="reviewListResultMap">
/* 후기 목록 검색*/
	SELECT 
		r.review_list
		,r.goods_list
		,r.buyer_id
		,r.order_detail_code
		,r.review_content
		,r.review_img
		,r.review_reg_date
		,r.review_update_date
		,r.save_point
		,r.like_amount
		,r.grade
	FROM 
		tb_review AS r 
		<trim prefix="WHERE" prefixOverrides="AND">
	   	<if test="sv != null and sv != ''">
	   		${sk} LIKE CONCAT('%',#{sv},'%')
	   	</if>
	   	<if test="fd != null and fd !='' and td != null and td !=''">
			AND
			r.review_reg_date <![CDATA[>]]> (#{fd})
			AND
			r.review_reg_date <![CDATA[<]]> (#{td})
		</if>
	 </trim>
	
</select>
<!-- 후기  목록 삭제 -->
<delete id="reviewListDelete" parameterType="Review">
/* 후기  목록 삭제*/
	DELETE 
	FROM 
		tb_review 
	WHERE 
		review_list = #{reviewList}

</delete>
<!-- 후기 댓글 목록 삭제 -->
<delete id="reviewListCommentDelete"  parameterType="ReviewComment"> 
/* 후기 댓글 목록 삭제*/
	DELETE 
	FROM 
		tb_review_comment 
	WHERE 
		review_list = #{reviewList}

</delete>



<!-- 추천 등록시 코드 증가 -->
<select id="ReviewLikeCode" resultType="String">
/* 추천 등록시 코드 증가*/
	SELECT 
		r.review_like
	FROM 
		tb_review_like AS r
	ORDER BY review_like DESC LIMIT 1
</select>
   
<!-- 추천 등록  -->
<insert id="reviewLike" parameterType="ReviewLike">
	INSERT INTO tb_review_like 
		(review_like
		,review_list
		,user_id
		,like_reg_date)
	VALUES 
		(#{reviewLike}
		,#{reviewList}
		,#{userId}
		,NOW())
</insert>

<!-- 추천 해제  -->
<delete id="reviewLikeDelete" parameterType="ReviewLike">
	DELETE 
	FROM 
		tb_review_like
	WHERE 
 		review_list= #{reviewList} AND user_id = #{userId}
 	
</delete>   

<!-- 추천수 update -->
<update id="reviewLikeUp" parameterType="Review">
UPDATE tb_review AS r
	SET
		like_amount	= (SELECT 
							COUNT(l.review_list)
			 		   FROM 
			  			   tb_review_like AS l
				       WHERE 
						  l.review_list = #{reviewList})
	WHERE review_list = #{reviewList}
	
	<selectKey keyProperty="likeAmount" resultType="int" order="AFTER">
		SELECT
			r.like_amount AS likeAmount
		FROM
			tb_review AS r
		WHERE 
			r.review_list = #{reviewList}
	</selectKey>
</update>
    
 
<!-- 후기 댓글 목록 -->
<select id="reviewComment" resultMap="reviewCommentSersultMap">
/* 후기 댓글 목록 */
SELECT 
	c.review_comment_list
	,c.review_list
	,c.user_id
	,c.review_comment_content
	,c.reg_date
	,c.modify_date
FROM 
	tb_review_comment AS c
</select>   
    
<!-- 후기 댓글 목록 검색 -->
 <select id="reviewCommentSaerch" parameterType="map" resultMap="reviewCommentSersultMap" fetchSize="100">
/* 후기 댓글 목록 검색*/
SELECT 
	c.review_comment_list
	,c.review_list
	,c.user_id
	,c.review_comment_content
	,c.reg_date
	,c.modify_date
FROM 
	tb_review_comment AS c
	<trim prefix="WHERE" prefixOverrides="AND">
	   	<if test="sv != null and sv != ''">
	   		${sk} LIKE CONCAT('%',#{sv},'%')
	   	</if>
	   	<if test="fd != null and fd !='' and td != null and td !=''">
			AND
			c.reg_date <![CDATA[>]]> (#{fd})
			AND
			c.reg_date <![CDATA[<]]> (#{td})
		</if>
	 </trim>
</select>   

<!-- 후기 댓글 목록 삭제 -->
<delete id="reviewCommentDelete"  parameterType="ReviewComment"> 
/* 후기 댓글 목록 삭제*/
	DELETE 
	FROM
		tb_review_comment 
	WHERE 
		review_comment_list = #{reviewCommentList}

</delete>


<select id="reviewCommnetList"  parameterType="String" resultType="map">
	/*후기 특정 댓글 목록 */
	SELECT 
		 rc.review_comment_list
		,rc.review_list
		,rc.user_id
		,rc.review_comment_content
		,rc.reg_date
		,rc.modify_date
	FROM 
		tb_review_comment AS rc
	WHERE
	 rc.review_list = #{reviewList}
</select>
    
</mapper>