<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks44team04.mapper.BoardMapper">

    <resultMap type="Board" id="boardResultMap">
        <id 	column="board_code" 		property="boardCode"/>
        <result column="board_category" 	property="boardCategory"/>
        <result column="user_id" 			property="userId"/>
        <result column="board_title" 		property="boardTitle"/>
        <result column="board_content" 		property="boardContent"/>
        <result column="board_file" 		property="boardFile"/>
        <result column="fix_check" 			property="fixCheck"/>
        <result column="view_amount" 		property="viewAmount"/>
        <result column="like_amount" 		property="likeAmount"/>
        <result column="reg_date" 			property="regDate"/>
        <result column="modify_date" 		property="modifyDate"/>
        <result column="save_point" 		property="savePoint"/>
        <result column="detele_check" 		property="deleteCheck"/>
			<association property="userInfo" resultMap="ks44team04.mapper.UserMapper.UserResultMap"/>
			<association property="boardCategoryInfo" resultMap="ks44team04.mapper.CategoryMapper.BoardCategoryMap"/>
			
			<collection property="commentList" javaType="list" ofType="BoardComment">
	        	<id 	column="board_comment"		property="boardComment" />
	        	<result column="board_code" 		property="boardCode" />
				<result column="user_id" 			property="userId" />
				<result column="comment_content" 	property="commentContent" />
				<result column="co_reg_date" 			property="coRegDate" />
				<result column="co_modify_date" 		property="coModifyDate" />
				<association property="userInfo" resultMap="ks44team04.mapper.UserMapper.UserResultMap"/>
	        </collection>
    </resultMap>
    
    <!-- 게시물 목록 조회 -->
	<select id="getBoardList" resultMap="boardResultMap" fetchSize="100" >
		/* 게시물 목록 조회 */
		SELECT
			 b.board_code
			,b.board_category
			,bc.category_name
			,u.user_id
			,b.board_title
			,b.board_content
			,b.board_file
			,b.fix_check
			,b.view_amount
			,b.like_amount
			,b.reg_date
			,b.modify_date
			,b.save_point
		FROM
			tb_board AS b
			INNER JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			INNER JOIN
			tb_user AS u
			ON
			b.user_id = u.user_id
		ORDER BY b.reg_date DESC;
	</select>
	
    <!-- 게시물 검색 -->
	<select id="getBoardListSearch"  parameterType="map" resultMap="boardResultMap" fetchSize="100" >
		/* 게시물 목록 검색 */
		SELECT
			 b.board_code
			,b.board_category
			,bc.category_name
			,u.user_id
			,b.board_title
			,b.board_content
			,b.board_file
			,b.fix_check
			,b.view_amount
			,b.like_amount
			,b.reg_date
			,b.modify_date
			,b.save_point
		FROM
			tb_board AS b
			INNER JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			INNER JOIN
			tb_user AS u
			ON
			b.user_id = u.user_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCateName != null and searchCateName != ''">
				${searchKey2} = #{searchCateName}
			</if>
			<if test="searchValue != null and searchValue != ''">
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="firstDate != null and firstDate !='' and lastDate != null and lastDate !=''">
				AND
				b.reg_date <![CDATA[>]]> (#{firstDate})
				AND
				b.reg_date <![CDATA[<]]> (#{lastDate})
			</if>
		</trim>
		ORDER BY b.reg_date DESC;
	</select>
	
	<!-- 페이징에 필요한 게시물 카운터 -->
	<!-- 
	<select>
		SELECT COUNT(*) FROM tb_board WHERE board_category = 'boardCategory002';
	</select>
	 -->
	
	<!-- 게시물 등록 -->
	<insert id="boardAdd" parameterType="Board">
	/* 게시물 등록  */
	INSERT INTO tb_board
		(board_code, board_category, user_id, board_title, board_content, board_file, reg_date, save_point)
	VALUES
		(#{boardCode}, #{boardCategory}, #{userId}, #{boardTitle}, #{boardContent}, #{boardFile}, NOW(), #{savePoint})
	</insert>
	
	<!-- 게시물 코드증가 -->
	<select id="getBoardNewCode" parameterType="String" resultType="String">
		SELECT  MAX(board_code)
		FROM 	tb_board
    </select>
	
	<!-- 게시글 상세 조회 (댓글포함) -->
    <select id="boardByCode"  parameterType="String" resultMap="boardResultMap">
	SELECT
		*
	FROM
		tb_board AS b
		LEFT JOIN
		tb_board_comment AS bc
		ON
		b.board_code = bc.board_code
		LEFT JOIN
		tb_user AS u
		ON
		bc.user_id = u.user_id
	WHERE
		b.board_code = #{boardCode}
    </select>
    
	<!-- 조회수 증가 -->
	<update id="viewCount">
	UPDATE
		tb_board AS b
	SET
		b.view_amount = b.view_amount + 1
	WHERE
		b.board_code = #{boardCode}
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="commentAdd" parameterType="BoardComment">
	/* 댓글 등록  */
	INSERT INTO tb_board_comment
		(board_comment, board_code, user_id, comment_content, co_reg_date)
	VALUES
		(#{boardComment}, #{boardCode}, #{userId}, #{commentContent}, NOW())
	</insert>
	
	<!-- 댓글 코드증가 -->
	<select id="getCommentNewCode" parameterType="String" resultType="String">
		SELECT  MAX(board_comment)
		FROM 	tb_board_comment
    </select>
	
	<!-- 댓글 삭제 -->
    <delete id="commentRemove" parameterType="BoardComment">
    	DELETE
    	FROM
    		tb_board_comment
        WHERE
            board_comment = #{boardComment}
    </delete>
    
    <!-- 댓글 수정 -->
    <update id="commentModify" parameterType="BoardComment">
        UPDATE tb_board_comment
        SET
			 comment_content = #{commentContent}
			,co_modify_date = NOW()
        WHERE
            board_comment = #{boardComment}
    </update>    
    
	<!-- 게시글 수정 -->
    <update id="boardModify" parameterType="Board">
        UPDATE tb_board
        SET
         <trim prefix="SET" prefixOverrides=",">
			<if test="boardCategory != null and boardCategory != ''">,board_category = #{boardCategory}</if>
			<if test="userId != null and userId != ''">,user_id = #{userId}</if>
			<if test="boardTitle != null and boardTitle != ''">,board_title = #{boardTitle}</if>
			<if test="boardContent != null and boardContent != ''">,board_content = #{boardContent}</if>
			<if test="boardFile != null and boardFile != ''">,board_file = #{boardFile}</if>
			<if test="boardTag != null and boardTag != ''">,board_tag = #{boardTag}</if>
			<if test="fixCheck != null and fixCheck != ''">,fix_check = #{fixCheck}</if>
			,view_amount = #{viewAmount}
			,like_amount = #{likeAmount}
			,modify_date = NOW()
			,report_amount = #{reportAmount}
			,save_point = #{savePoint}
		</trim>
        WHERE
            board_code = #{boardCode}
    </update>
    
    <!-- 게시글 삭제 -->
    <update id="boardRemoveByCode" parameterType="Board">
        UPDATE tb_board
        SET
            delete_check = 'Y'
        WHERE
            board_code = #{boardCode}
    </update>
	
	<!-- 게시글 리스트 조회 -->
    <select id="BoardListUser" parameterType="string" resultMap="boardResultMap">
        SELECT
            *
        FROM
            tb_board AS b
            INNER JOIN
            tb_user AS u
            ON
            b.user_id = u.user_id
        WHERE
            delete_check = 'N'
		AND
        	board_category = #{boardCategory}
        ORDER BY board_code DESC;
    </select>
	
	
	
	
	
	<!-- ************ 게시물 좋아요 ************  -->
    <resultMap type="BoardLike" id="boardLikeResultMap">
        <id 	column="board_like" 		property="boardLike"/>
        <result column="board_code" 		property="boardCode"/>
        <result column="user_id" 			property="userId"/>
        <result column="like_reg_date" 	property="likeRegDate"/>
			<association property="userInfo" resultMap="ks44team04.mapper.UserMapper.UserResultMap"/>
			<association property="boardCategoryInfo" resultMap="ks44team04.mapper.CategoryMapper.BoardCategoryMap"/>
	        <association property="boardInfo" resultMap="boardResultMap" />
    </resultMap>
    
    <!-- 게시물 좋아요 조회 -->
	<select id="getBoardLikeList" parameterType="map" resultMap="boardLikeResultMap" fetchSize="100" >
		/* 게시물 좋아요 조회 */
		SELECT
			 l.board_like
			,b.board_category
			,bc.category_name
			,b.board_title
			,l.board_code
			,l.user_id
			,l.like_reg_date
		FROM
			tb_board_like AS l
			JOIN
			tb_board AS b
			ON
			l.board_code = b.board_code
			JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			JOIN
			tb_user AS u
			ON
			l.user_id = u.user_id
		ORDER BY l.like_reg_date DESC;
	</select>
	
    <!-- 게시물 좋아요 검색 -->
	<select id="getBoardLikeListSearch" parameterType="map" resultMap="boardLikeResultMap" fetchSize="100" >
		/* 게시물 좋아요 검색 */
		SELECT
			 l.board_like
			,b.board_category
			,bc.category_name
			,b.board_title
			,l.board_code
			,l.user_id
			,l.like_reg_date
		FROM
			tb_board_like AS l
			JOIN
			tb_board AS b
			ON
			l.board_code = b.board_code
			JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			JOIN
			tb_user AS u
			ON
			l.user_id = u.user_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCateName != null and searchCateName != ''">
				${searchKey2} = #{searchCateName}
			</if>
			<if test="searchValue != null and searchValue != ''">
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="firstDate != null and firstDate !='' and lastDate != null and lastDate !=''">
				AND
				l.like_reg_date <![CDATA[>]]> (#{firstDate})
				AND
				l.like_reg_date <![CDATA[<]]> (#{lastDate})
			</if>
		</trim>
		ORDER BY l.like_reg_date DESC;
	</select>
	
    <resultMap type="BoardComment" id="commentResultMap">
        <id 	column="board_comment" 		property="boardComment"/>
        <result column="board_code" 		property="boardCode"/>
        <result column="user_id" 			property="userId"/>
        <result column="comment_content" 	property="commentContent"/>
		<result column="co_reg_date" 		property="coRegDate" />
		<result column="co_modify_date" 	property="coModifyDate" />
			<association property="userInfo" resultMap="ks44team04.mapper.UserMapper.UserResultMap"/>
			<association property="boardCategoryInfo" resultMap="ks44team04.mapper.CategoryMapper.BoardCategoryMap"/>
	        <association property="boardInfo" resultMap="boardResultMap" />
    </resultMap>
    
    <!-- 게시물 댓글 조회 -->
	<select id="getBoardCommentList"  parameterType="map" resultMap="commentResultMap" fetchSize="100" >
		/* 게시물 댓글 조회 */
		SELECT
			 co.board_comment
			,b.board_category
			,b.board_title
			,bc.category_name
			,co.board_code
			,u.user_id
			,co.comment_content
			,co.co_reg_date
			,co.co_modify_date
		FROM
			tb_board_comment AS co
			INNER JOIN
			tb_board AS b
			ON
			co.board_code = b.board_code
			INNER JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			INNER JOIN
			tb_user AS u
			ON
			co.user_id = u.user_id
		ORDER BY co.co_reg_date DESC;
	</select>
	
    <!-- 게시물 댓글 검색 -->
	<select id="getBoardCommentListSearch"  parameterType="map" resultMap="commentResultMap" fetchSize="100" >
		/* 게시물 댓글 조회 */
		SELECT
			 co.board_comment
			,b.board_category
			,b.board_title
			,bc.category_name
			,co.board_code
			,u.user_id
			,co.comment_content
			,co.co_reg_date
			,co.co_modify_date
		FROM
			tb_board_comment AS co
			INNER JOIN
			tb_board AS b
			ON
			co.board_code = b.board_code
			INNER JOIN
			tb_board_category AS bc
			ON
			b.board_category = bc.board_category
			INNER JOIN
			tb_user AS u
			ON
			co.user_id = u.user_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCateName != null and searchCateName != ''">
				${searchKey2} = #{searchCateName}
			</if>
			<if test="searchValue != null and searchValue != ''">
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="firstDate != null and firstDate !='' and lastDate != null and lastDate !=''">
				AND
				co.co_reg_date <![CDATA[>]]> (#{firstDate})
				AND
				co.co_reg_date <![CDATA[<]]> (#{lastDate})
			</if>
		</trim>
		ORDER BY co.co_reg_date DESC;
	</select>
	
</mapper>