<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks44team04.mapper.UserMapper">
	
	<resultMap 	id="LoginResultMap"			type="Login">
		<id		column="log_code"			property="logCode" />
		<result column="login_id"			property="loginId" />
		<result column="login_date"			property="loginDate" />
		<result column="logout_date"		property="logoutDate" />
	</resultMap>
	
	<resultMap 	id="UserResultMap"			type="User">
        <result column="user_id" 			property="userId"/>
        <result column="user_pw" 			property="userPw"/>
        <result column="user_name" 			property="userName"/>
        <result column="user_gender" 		property="userGender"/>
        <result column="user_nickname" 		property="userNickname"/>
        <result column="user_address" 		property="userAddress"/>
        <result column="user_address2" 		property="userAddress2"/>
        <result column="user_phone" 		property="userPhone"/>
        <result column="user_email" 		property="userEmail"/>
        <result column="user_right" 		property="userRight"/>
        <result column="user_reg_date" 		property="userRegDate"/>
        <result column="user_update_date" 	property="userUpdateDate"/>
        <result column="user_status" 		property="userStatus"/>
        <result column="user_penalty" 		property="userPenalty"/>
        <result column="user_point" 		property="userPoint"/>
        <result column="user_info_keep" 	property="userInfoKeep"/>
        <result column="user_level" 		property="userLevel"/>
        <association property="rightList"		resultMap="RightResultMap"/>
        <association property="levelBuyer"		resultMap="LevelBuyerResultMap"/>
        <association property="levelSeller"		resultMap="LevelSellerResultMap"/>
	</resultMap>
	
	<resultMap 	id="SellerResultMap" 			type="Seller">
		<id		column="seller_code" 			property="sellerCode" />
		<result column="s_seller_id" 			property="sellerId" />
		<result column="store_name" 			property="storeName" />
		<result column="seller_sort" 			property="sellerSort" />
		<result column="bank_name" 				property="bankName" />
		<result column="account" 				property="account" />
		<result column="account_holder" 		property="accountHolder" />
		<result column="licence_num" 			property="licenceNum" />
		<result column="store_address" 			property="storeAddress" />
		<result column="store_address2" 		property="storeAddress2" />
		<result column="store_phone" 			property="storePhone" />
		<result column="store_email" 			property="storeEmail" />
		<result column="licence_img" 			property="licenceImg" />
		<result column="online_licence_img" 	property="onlineLicenceImg" />
		<result column="approve_ask_date" 		property="approveAskDate" />
		<result column="approve_date" 			property="approveDate" />
		<result column="approve_check" 			property="approveCheck" />
		<result column="approve_id" 			property="approveId" />
		<association property="userInfo" 		resultMap="UserResultMap"/>
		<association property="goodsList"		resultMap="GoodsResultMap"/>
		<association property="rightList"		resultMap="RightResultMap"/>
		<association property="levelSeller"		resultMap="LevelSellerResultMap"/>
		<association property="goodsLargeCategory" resultMap="GoodsLargeCategoryMap"/>
	</resultMap>
	
	<resultMap 	id="DormantResultMap"			type="Dormant">
		<id	 	column="dormant_code"			property="dormantCode" />
		<result column="login_id"				property="loginId" />
		<result column="dormant_status"			property="dormantStatus" />
		<result column="dormant_change_date"	property="dormantChangeDate" />
	</resultMap>
	
	<resultMap 	id="LeaveResultMap"				type="Leave">
		<id		column="leave_code"				property="leaveCode" />
		<result column="login_id"				property="loginId" />
		<result column="leave_reason"			property="leaveReason" />
		<result column="leave_date"				property="leaveDate" />
		<result column="user_info_destroy"		property="userInfoDestroy" />
	</resultMap>
	
	<resultMap 	id="GoodsResultMap"			type="Goods">
		<id 	column="goods_code" 		property="goodsCode"/>
		<result column="g_seller_id" 		property="sellerId"/>
		<result column="goods_name" 		property="goodsName"/>
		<result column="goods_price" 		property="goodsPrice"/>
		<result column="soldout_check" 	 	property="soldoutCheck"/>
		<result column="reg_date" 	 		property="regDate"/>
	</resultMap>
	
	<resultMap 	id="RightResultMap" 		type="Right">
		<id 	column="user_right" 		property="userRight"/>
		<result column="right_status" 		property="rightStatus"/>
		<result column="reg_id" 			property="regId"/>
		<result column="reg_date" 			property="regDate"/>
		<result column="use_check" 			property="useCheck"/>
	</resultMap>
	
	<resultMap 	id="LevelBuyerResultMap" 	type="LevelBuyerCategory">
		<id 	column="b_level_code" 		property="levelCode"/>
		<result column="b_level_name" 		property="levelName"/>
		<result column="reg_id" 			property="regId"/>
		<result column="level_reg_date" 	property="levelRegDate"/>
		<result column="use_check" 			property="useCheck"/>
		<result column="buyer_price_terms" 	property="buyerPriceTerms"/>
		<result column="save_rate" 			property="saveRate"/>
		<result column="level_code_npk" 	property="levelCodeNpk"/>
	</resultMap>
	
	<resultMap 	 id="LevelSellerResultMap" 		type="LevelSellerCategory">
		<id 	 column="s_level_code" 			property="levelCode"/>
		<result  column="s_level_name" 			property="levelName"/>
		<result  column="reg_id" 				property="regId"/>
		<result  column="level_reg_date" 		property="levelRegDate"/>
		<result  column="use_check" 			property="useCheck"/>
		<result  column="seller_price_terms" 	property="sellerPriceTerms"/>
		<result  column="seller_score_terms" 	property="sellerScoreTerms"/>
		<result  column="seller_review_terms"	property="sellerReviewTerms"/>
		<result  column="level_code_npk" 	 	property="levelCodeNpk"/>
	</resultMap>
	
	<resultMap 	 id="GoodsLargeCategoryMap" 		type="GoodsLargeCategory">
		<id 	 column="goods_large_category" 		property="goodsLargeCategory"/>
		<result  column="goods_category" 			property="goodsCategory"/>
		<result  column="g_use_check" 				property="useCheck"/>
	</resultMap>


	<!-- 판매자 신청 승인 -->
	<update id="approveSeller" parameterType="map">
		/* 판매자 신청 승인 */
		UPDATE tb_seller
		<trim prefix="SET" prefixOverrides=",">
			approve_date = NOW(),
			<if test="userId != null and userId != ''">,approve_check = #{approveCheck}</if>
			<if test="userId != null and userId != ''">,approve_id = #{approveId}</if>
		</trim>
		WHERE
			seller_id = #{sellerId};
	</update>

	<!-- 판매자 등록 -->
	<insert id="addSeller" parameterType="Seller">
		/* 판매자 등록 */
		INSERT INTO tb_seller
			(seller_code, seller_id, store_name, seller_sort, bank_name, account, account_holder, licence_num, store_address, store_address2, store_phone, store_email, approve_ask_date, approve_date, approve_check, approve_id)
		VALUES 
			(#{sellerCode}, #{sellerId}, #{storeName}, #{sellerSort}, #{bankName}, #{account}, #{accountHolder}, #{licenceNum}, #{storeAddress}, #{storeAddress2}, #{storePhone}, #{storeEmail}, NOW(), #{approveDate}, #{approveCheck}, #{approveId})
	</insert>
	
	<!-- 회원정보 수정 -->
	<update id="modifyUser" parameterType="map">
		/* 회원정보 수정 */
		UPDATE tb_user
		<trim prefix="SET" prefixOverrides=",">
			<if test="userId != null and userId != ''">user_id = #{userId}</if>
			<if test="userPw != null and userPw != ''">,user_pw = #{userPw}</if>
			<if test="userName != null and userName != ''">,user_name = #{userName}</if>
			<if test="userGender != null and userGender != ''">,user_gender = #{userGender}</if>
			<if test="userNickname != null and userNickname != ''">,user_nickname = #{userNickname}</if>
			<if test="userAddress != null and userAddress != ''">,user_address = #{userAddress}</if>
			<if test="userAddress2 != null and userAddress2 != ''">,user_address2 = #{userAddress2}</if>
			<if test="userPhone != null and userPhone != ''">,user_phone = #{userPhone}</if>
			<if test="userEmail != null and userEmail != ''">,user_email = #{userEmail}</if>
			<if test="userRight != null and userRight != ''">,user_right = #{userRight}</if>
			,user_update_date = NOW()
			<if test="userStatus != null and userStatus != ''">,user_status = #{userStatus}</if>
			<if test="userPenalty != null and userPenalty != ''">,user_penalty = #{userPenalty}</if>
			<if test="userPoint != null and userPoint != ''">,user_point = #{userPoint}</if>
			<if test="userLevel != null and userLevel != ''">,user_level = #{userLevel}</if>
		</trim>
		WHERE
			user_id = #{userId};
	</update>
	
	<!-- 이미 판매자신청 한 회원 판매자신청 불가 -->
	<select id="isAddSeller" parameterType="String" resultType="int">
		/* 이미 판매자신청 한 회원 판매자신청 불가 */
		SELECT
	 		COUNT(seller_id)
		FROM 
			tb_seller
		WHERE 
			seller_id = #{sellerId};
	</select>
	
	<!-- 판매자 휴대폰번호 중복체크 -->
	<select id="phoneCheckS" parameterType="String" resultType="int">
		/* 판매자 휴대폰번호 중복체크 */
		SELECT
			COUNT(s.store_phone)
		FROM 
			tb_seller AS s
		WHERE 
			s.store_phone = #{storePhone};
	</select>
	
	<!-- 판매자 이메일 중복체크 -->
	<select id="emailCheckS" parameterType="String" resultType="int">
		/* 판매자 이메일 중복체크 */
		SELECT
			COUNT(s.store_email)
		FROM 
			tb_seller AS s
		WHERE 
			s.store_email = #{storeEmail};
	</select>
	
	<!-- 판매자 상호명 중복체크 -->
	<select id="storeNameCheck" parameterType="String" resultType="int">
		/* 판매자 상호명 중복체크 */
		SELECT
			COUNT(s.store_name)
		FROM 
			tb_seller AS s
		WHERE 
			s.store_name = #{storeName};
	</select>
	
	<!-- 판매자 상호명 중복체크 -->
	<select id="codeCheck" parameterType="String" resultType="int">
		/* 판매자 상호명 중복체크 */
		SELECT
			COUNT(s.seller_code)
		FROM 
			tb_seller AS s
		WHERE 
			s.seller_code = #{sellerCode};
	</select>
	
	<!-- 회원 휴대폰번호 중복체크 -->
	<select id="phoneCheckU" parameterType="String" resultType="int">
		/* 회원 휴대폰번호 중복체크 */
		SELECT
			COUNT(u.user_phone)
		FROM 
			tb_user AS u
		WHERE 
			u.user_phone = #{userPhone};
	</select>
	
	<!-- 회원 이메일 중복체크 -->
	<select id="emailCheckU" parameterType="String" resultType="int">
		/* 회원 이메일 중복체크 */
		SELECT
			COUNT(u.user_email)
		FROM 
			tb_user AS u
		WHERE 
			u.user_email = #{userEmail};
	</select>
	
	<!-- 회원 닉네임 중복체크 -->
	<select id="nicknameCheck" parameterType="String" resultType="int">
		/* 회원 닉네임 중복체크 */
		SELECT
			COUNT(u.user_Nickname)
		FROM 
			tb_user AS u
		WHERE 
			u.user_Nickname = #{userNickname};
	</select>
	
	<!-- 회원 아이디 중복체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		/* 회원 아이디 중복체크 */
		SELECT
			COUNT(u.user_id)
		FROM 
			tb_user AS u
		WHERE 
			u.user_id = #{userId};
	</select>
	
 	<!-- 회원등록 -->
	<insert id="addUser" parameterType="User">
		/* 회원 가입 */
		INSERT INTO tb_user
			(user_id, user_pw, user_name, user_gender, user_nickname, user_address, user_address2, user_phone, user_email, user_right, user_reg_date, user_status, user_penalty, user_point, user_info_keep, user_level)
		VALUES 
			(#{userId}, #{userPw}, #{userName}, #{userGender}, #{userNickname}, #{userAddress}, #{userAddress2}, #{userPhone}, #{userEmail}, #{userRight}, NOW(), #{userStatus}, #{userPenalty}, #{userPoint}, #{userInfoKeep}, #{userLevel})
	</insert>
	
	<!-- 특정 판매자 판매상품 조회 -->
    <select id="getGoodsList" parameterType="String" resultMap="GoodsResultMap">
    	/* getGoodsList */
    	SELECT
			 g.seller_id
			,g.goods_code
			,g.goods_name
			,g.goods_price
			,g.reg_date
		FROM
			tb_goods g
		WHERE
			g.seller_id = #{sellerId}
		ORDER BY g.reg_date
	</select>
    
    <!-- 특정 판매자 상세정보 조회 -->
    <select id="getSellerInfoById" parameterType="String" resultMap="SellerResultMap">
    	/* 특정 판매자 상세정보 조회 */
    	SELECT
			 s.seller_code
			,s.seller_id		AS s_seller_id
			,s.store_name
			,s.seller_sort
			,s.bank_name
			,s.account
			,s.account_holder
			,s.licence_num
			,s.store_address
			,s.store_address2
			,s.store_phone
			,s.store_email
			,s.licence_img
			,s.online_licence_img
			,s.approve_ask_date
			,s.approve_date
			,s.approve_check
			,s.approve_id
		FROM 
			tb_seller s
		WHERE
			s.seller_id = #{sellerId}
    </select>
    
    <!-- 특정 회원 상세정보 조회(판매자만) -->
	<select id="getUserInfoByIdS" resultMap="SellerResultMap">
		/* 특정 회원 상세정보 조회(판매자만) */
		SELECT
			 u.user_id
			,s.seller_id		AS s_seller_id
			,u.user_pw
			,u.user_name
			,u.user_gender
			,u.user_nickname
			,u.user_address
			,u.user_address2
			,u.user_phone
			,u.user_email
			,u.user_right
			,r.right_status
			,u.user_reg_date
			,u.user_update_date
			,u.user_status
			,u.user_penalty
			,u.user_point
			,u.user_info_keep
			,u.user_level
			,ls.level_name		AS s_level_name
		FROM
			tb_user u
			INNER JOIN
			tb_seller s
			ON
			u.user_id = s.seller_id
			INNER JOIN
			tb_right r
			ON
			u.user_right = r.user_right
			LEFT JOIN
			tb_level_seller_category ls
			ON
			u.user_level = ls.level_code
		WHERE 
			u.user_right = 'seller' 
			AND
			u.user_status = '정상' 
			AND 
			s.seller_id = #{sellerId}
	</select>
    
    <!-- 판매자 목록 조회 -->
    <select id="getSellerList" resultMap="SellerResultMap">
    	/* 판매자 목록 조회 */
    	SELECT 
			 s.seller_code		
			,s.seller_id		AS s_seller_id
			,s.store_name
			,s.seller_sort
			,s.bank_name
			,s.account
			,s.account_holder
			,s.licence_num
			,s.store_address
			,s.store_address2
			,s.store_phone
			,s.store_email
			,s.licence_img
			,s.online_licence_img
			,s.approve_ask_date
			,s.approve_date
			,s.approve_check
			,s.approve_id
		FROM 
			tb_seller AS s
		<trim prefix="where" prefixOverrides="AND |OR ">
			<if test="searchValue != null and searchValue != ''">
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</trim>
    </select>
	
	<!-- 특정회원 조회 -->
	<select id="getUserInfoById" parameterType="String" resultMap="UserResultMap">
		/* 특정회원 조회 */
		SELECT
		     u.user_id
			,u.user_pw			
			,u.user_name		
			,u.user_gender			
			,u.user_nickname		
			,u.user_address			
			,u.user_address2		
			,u.user_phone			
			,u.user_email			
			,u.user_right	
			,u.user_reg_date	
			,u.user_update_date		
			,u.user_status			
			,u.user_penalty			
			,u.user_point			
			,u.user_info_keep		
			,u.user_level
			,r.right_status
			,lb.level_name 		AS b_level_name
			,ls.level_name 		AS s_level_name
		FROM
		    tb_user u
		    INNER JOIN 
		    tb_right r
		    USING (user_right)
		    LEFT JOIN 
		    tb_level_buyer_category AS lb
		    ON 
		    u.user_level = lb.level_code
		    LEFT JOIN 
		    tb_level_seller_category AS ls
		    ON 
		    u.user_level = ls.level_code
		WHERE u.user_id = #{userId}
	</select>
	
    <!-- 회원 목록 조회 -->
    <select id="getUserList" resultMap="UserResultMap">
    	/* 회원 목록 조회 */
    	SELECT
			 u.user_id
			,u.user_pw
			,u.user_name
			,u.user_gender
			,u.user_nickname
			,u.user_address
			,u.user_address2
			,u.user_phone
			,u.user_email
			,u.user_right
			,r.right_status
			,u.user_reg_date
			,u.user_update_date
			,u.user_status
			,u.user_penalty
			,u.user_point
			,u.user_info_keep
			,u.user_level
		FROM 
			tb_user AS u
			INNER JOIN 
			tb_right AS r
			ON 
			u.user_right = r.user_right
		<trim prefix="where" prefixOverrides="AND |OR ">
			<if test="searchValue != null and searchValue != ''">
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</trim>
		ORDER BY u.user_id
    </select>
	
	<!-- 로그 조회 -->
	<select id="getLoginList" resultMap="LoginResultMap">
		/* 로그 조회 */
		SELECT 
			 log_code
			,login_id
			,login_date
			,logout_date
		FROM 
			tb_login
	</select>	
	
	<!-- 탈퇴회원 목록 조회 -->
	<select id="getLeaveList" resultMap="LeaveResultMap">
		/* 탈퇴회원 목록 조회 */
		SELECT 
			 leave_code
			,login_id
			,leave_reason
			,leave_date
			,user_info_destroy
		FROM 
			tb_leave
	</select>
	
	<!-- 휴면회원 목록 조회 -->
	<select id="getDormantList" resultMap="DormantResultMap">
		/* 휴면회원 목록 조회 */
		SELECT 
			 dormant_code
			,login_id
			,dormant_status
			,dormant_change_date
		FROM 
			tb_dormant
	</select>
	
	<!-- 상품 카테고리 조회(판매자코드) -->
	<select id="getGoodsLargeCategory" resultMap="GoodsLargeCategoryMap">
		/* 상품 카테고리 조회(판매자코드) */
		SELECT 
			 g.goods_large_category
			,g.goods_category
			,g.use_check		AS g_use_check
		FROM 
			tb_goods_large_category as g
	</select>
	
	<!-- 구매자 등급 조회 -->
	<select id="getLevelBuyer" resultMap="LevelBuyerResultMap">
		/* 구매자 등급 조회 */
		SELECT
			 lb.level_code		AS b_level_code
			,lb.level_name		AS b_level_name
		FROM
			tb_level_buyer_category lb
	</select>
	
	<!-- 판매자 등급 조회 -->
	<select id="getLevelSeller" resultMap="LevelSellerResultMap">
		/* 판매자 등급 조회 */
		SELECT
			 ls.level_code		AS s_level_code
			,ls.level_name		AS s_level_name
		FROM
			tb_level_seller_category ls
	</select>
	
	<!-- 권한 조회 -->
	<select id="getRightList" resultMap="RightResultMap">
		/* 권한 조회 */
		SELECT
			 r.user_right
			,r.right_status
		FROM
			tb_right r
		WHERE
			right_status = '구매자' OR right_status = '판매자 승인 전'
	</select>
	
	<!-- 로그인 -->
    <select id="userLogin" parameterType="String" resultType="String">
        SELECT IF(COUNT(*) = 1, user_pw, 'none')
        FROM tb_user
        WHERE user_id = #{userId};
    </select>

    <select id="getLoginUserInfo" parameterType="String" resultMap="UserResultMap">
        SELECT user_name,
               user_right
        FROM tb_user
        WHERE user_id = #{userId};
    </select>
    
</mapper>